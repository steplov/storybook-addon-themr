// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReactCssThemr /> should render empty without props 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    Story
</div>,
  "nodes": Array [
    <div>
      Story
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ReactCSSThemr
        channel={
                Object {
                        "emit": [Function],
                        "on": [Function],
                        "removeListener": [Function],
                      }
        }
        story={
                <div>
                        Story
                </div>
        }
        themes={
                Object {
                        "4": Object {
                          "e": 22,
                          "f": 33,
                        },
                        "theme 1": Object {
                          "a": 12,
                          "b": 13,
                        },
                        "theme2": Object {
                          "c": 14,
                          "d": 15,
                        },
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ReactCSSThemr {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onReceiveData": [Function],
        "props": Object {
          "channel": Object {
            "emit": [Function],
            "on": [Function],
            "removeListener": [Function],
          },
          "story": <div>
            Story
</div>,
          "themes": Object {
            "4": Object {
              "e": 22,
              "f": 33,
            },
            "theme 1": Object {
              "a": 12,
              "b": 13,
            },
            "theme2": Object {
              "c": 14,
              "d": 15,
            },
          },
        },
        "refs": Object {},
        "state": Object {
          "currentTheme": "4",
          "isReady": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          Story
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          Story
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ReactCSSThemr
    channel={
        Object {
            "emit": [Function],
            "on": [Function],
            "removeListener": [Function],
          }
    }
    story={
        <div>
            Story
        </div>
    }
    themes={
        Object {
            "4": Object {
              "e": 22,
              "f": 33,
            },
            "theme 1": Object {
              "a": 12,
              "b": 13,
            },
            "theme2": Object {
              "c": 14,
              "d": 15,
            },
          }
    }
/>,
}
`;
